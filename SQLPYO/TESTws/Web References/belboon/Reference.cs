//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18408.
// 
#pragma warning disable 1591

namespace TESTws.belboon {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
	using System.Net;
	using System.Text;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BelboonHandlerBinding", Namespace="urn:DefaultNamespace")]
    public partial class BelboonHandler : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertEventDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramConditionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProgramsByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatisticsByAdMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatisticsByAdPlatformOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatisticsByProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatisticsDailyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatisticsMonthlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVoucherCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCommonAdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchProgramsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;

		protected override WebRequest GetWebRequest(Uri uri)
		{
			HttpWebRequest req = (HttpWebRequest)base.GetWebRequest(uri);
			//req.Credentials = new NetworkCredential("webmaster@planesyofertas.com", "Cow3LDhUzkLBckTj46FJ");
			string _auth = string.Format("{0}:{1}", "webmaster@planesyofertas.com", "Cow3LDhUzkLBckTj46FJ");

			string _enc = Convert.ToBase64String(Encoding.ASCII.GetBytes(_auth));
			string _cred = string.Format("{0} {1}", "Basic", _enc);
			req.Headers[HttpRequestHeader.Authorization] = _cred;

			return req;
		}

        /// <remarks/>
        public BelboonHandler() {
            this.Url = global::TESTws.Properties.Settings.Default.TESTws_belboon_BelboonHandler;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAccountInfoCompletedEventHandler getAccountInfoCompleted;
        
        /// <remarks/>
        public event insertEventDataCompletedEventHandler insertEventDataCompleted;
        
        /// <remarks/>
        public event getEventListCompletedEventHandler getEventListCompleted;
        
        /// <remarks/>
        public event getNewProgramsCompletedEventHandler getNewProgramsCompleted;
        
        /// <remarks/>
        public event getProgramCategoriesCompletedEventHandler getProgramCategoriesCompleted;
        
        /// <remarks/>
        public event getProgramConditionDetailsCompletedEventHandler getProgramConditionDetailsCompleted;
        
        /// <remarks/>
        public event getProgramDetailsCompletedEventHandler getProgramDetailsCompleted;
        
        /// <remarks/>
        public event getProgramsCompletedEventHandler getProgramsCompleted;
        
        /// <remarks/>
        public event getProgramsByCategoryCompletedEventHandler getProgramsByCategoryCompleted;
        
        /// <remarks/>
        public event getStatisticsByAdMediaCompletedEventHandler getStatisticsByAdMediaCompleted;
        
        /// <remarks/>
        public event getStatisticsByAdPlatformCompletedEventHandler getStatisticsByAdPlatformCompleted;
        
        /// <remarks/>
        public event getStatisticsByProgramCompletedEventHandler getStatisticsByProgramCompleted;
        
        /// <remarks/>
        public event getStatisticsDailyCompletedEventHandler getStatisticsDailyCompleted;
        
        /// <remarks/>
        public event getStatisticsMonthlyCompletedEventHandler getStatisticsMonthlyCompleted;
        
        /// <remarks/>
        public event getVoucherCodesCompletedEventHandler getVoucherCodesCompleted;
        
        /// <remarks/>
        public event searchCommonAdsCompletedEventHandler searchCommonAdsCompleted;
        
        /// <remarks/>
        public event searchProgramsCompletedEventHandler searchProgramsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getAccountInfo", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getAccountInfo() {
            object[] results = this.Invoke("getAccountInfo", new object[0]);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountInfoAsync() {
            this.getAccountInfoAsync(null);
        }
        
        /// <remarks/>
        public void getAccountInfoAsync(object userState) {
            if ((this.getAccountInfoOperationCompleted == null)) {
                this.getAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountInfoOperationCompleted);
            }
            this.InvokeAsync("getAccountInfo", new object[0], this.getAccountInfoOperationCompleted, userState);
        }
        
        private void OngetAccountInfoOperationCompleted(object arg) {
            if ((this.getAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountInfoCompleted(this, new getAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/insertEventData", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap insertEventData(object aData) {
            object[] results = this.Invoke("insertEventData", new object[] {
                        aData});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void insertEventDataAsync(object aData) {
            this.insertEventDataAsync(aData, null);
        }
        
        /// <remarks/>
        public void insertEventDataAsync(object aData, object userState) {
            if ((this.insertEventDataOperationCompleted == null)) {
                this.insertEventDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertEventDataOperationCompleted);
            }
            this.InvokeAsync("insertEventData", new object[] {
                        aData}, this.insertEventDataOperationCompleted, userState);
        }
        
        private void OninsertEventDataOperationCompleted(object arg) {
            if ((this.insertEventDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertEventDataCompleted(this, new insertEventDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getEventList", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getEventList(object adPlatformIds, int programId, string eventType, string eventStatus, string eventCurrency, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime eventDateStart, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime eventDateEnd, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime eventChangeDateStart, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime eventChangeDateEnd, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getEventList", new object[] {
                        adPlatformIds,
                        programId,
                        eventType,
                        eventStatus,
                        eventCurrency,
                        eventDateStart,
                        eventDateEnd,
                        eventChangeDateStart,
                        eventChangeDateEnd,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getEventListAsync(object adPlatformIds, int programId, string eventType, string eventStatus, string eventCurrency, System.DateTime eventDateStart, System.DateTime eventDateEnd, System.DateTime eventChangeDateStart, System.DateTime eventChangeDateEnd, object orderBy, int limit, int offset) {
            this.getEventListAsync(adPlatformIds, programId, eventType, eventStatus, eventCurrency, eventDateStart, eventDateEnd, eventChangeDateStart, eventChangeDateEnd, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getEventListAsync(object adPlatformIds, int programId, string eventType, string eventStatus, string eventCurrency, System.DateTime eventDateStart, System.DateTime eventDateEnd, System.DateTime eventChangeDateStart, System.DateTime eventChangeDateEnd, object orderBy, int limit, int offset, object userState) {
            if ((this.getEventListOperationCompleted == null)) {
                this.getEventListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventListOperationCompleted);
            }
            this.InvokeAsync("getEventList", new object[] {
                        adPlatformIds,
                        programId,
                        eventType,
                        eventStatus,
                        eventCurrency,
                        eventDateStart,
                        eventDateEnd,
                        eventChangeDateStart,
                        eventChangeDateEnd,
                        orderBy,
                        limit,
                        offset}, this.getEventListOperationCompleted, userState);
        }
        
        private void OngetEventListOperationCompleted(object arg) {
            if ((this.getEventListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventListCompleted(this, new getEventListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getNewPrograms", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getNewPrograms(int adPlatformId, string programLanguage, string partnershipStatus, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getNewPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getNewProgramsAsync(int adPlatformId, string programLanguage, string partnershipStatus, object orderBy, int limit, int offset) {
            this.getNewProgramsAsync(adPlatformId, programLanguage, partnershipStatus, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getNewProgramsAsync(int adPlatformId, string programLanguage, string partnershipStatus, object orderBy, int limit, int offset, object userState) {
            if ((this.getNewProgramsOperationCompleted == null)) {
                this.getNewProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewProgramsOperationCompleted);
            }
            this.InvokeAsync("getNewPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        orderBy,
                        limit,
                        offset}, this.getNewProgramsOperationCompleted, userState);
        }
        
        private void OngetNewProgramsOperationCompleted(object arg) {
            if ((this.getNewProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewProgramsCompleted(this, new getNewProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getProgramCategories", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getProgramCategories(string language, int categoryId, string query, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getProgramCategories", new object[] {
                        language,
                        categoryId,
                        query,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getProgramCategoriesAsync(string language, int categoryId, string query, object orderBy, int limit, int offset) {
            this.getProgramCategoriesAsync(language, categoryId, query, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getProgramCategoriesAsync(string language, int categoryId, string query, object orderBy, int limit, int offset, object userState) {
            if ((this.getProgramCategoriesOperationCompleted == null)) {
                this.getProgramCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramCategoriesOperationCompleted);
            }
            this.InvokeAsync("getProgramCategories", new object[] {
                        language,
                        categoryId,
                        query,
                        orderBy,
                        limit,
                        offset}, this.getProgramCategoriesOperationCompleted, userState);
        }
        
        private void OngetProgramCategoriesOperationCompleted(object arg) {
            if ((this.getProgramCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramCategoriesCompleted(this, new getProgramCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getProgramConditionDetails", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getProgramConditionDetails(int programId, int adPlatformId) {
            object[] results = this.Invoke("getProgramConditionDetails", new object[] {
                        programId,
                        adPlatformId});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getProgramConditionDetailsAsync(int programId, int adPlatformId) {
            this.getProgramConditionDetailsAsync(programId, adPlatformId, null);
        }
        
        /// <remarks/>
        public void getProgramConditionDetailsAsync(int programId, int adPlatformId, object userState) {
            if ((this.getProgramConditionDetailsOperationCompleted == null)) {
                this.getProgramConditionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramConditionDetailsOperationCompleted);
            }
            this.InvokeAsync("getProgramConditionDetails", new object[] {
                        programId,
                        adPlatformId}, this.getProgramConditionDetailsOperationCompleted, userState);
        }
        
        private void OngetProgramConditionDetailsOperationCompleted(object arg) {
            if ((this.getProgramConditionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramConditionDetailsCompleted(this, new getProgramConditionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getProgramDetails", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getProgramDetails(int programId) {
            object[] results = this.Invoke("getProgramDetails", new object[] {
                        programId});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getProgramDetailsAsync(int programId) {
            this.getProgramDetailsAsync(programId, null);
        }
        
        /// <remarks/>
        public void getProgramDetailsAsync(int programId, object userState) {
            if ((this.getProgramDetailsOperationCompleted == null)) {
                this.getProgramDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramDetailsOperationCompleted);
            }
            this.InvokeAsync("getProgramDetails", new object[] {
                        programId}, this.getProgramDetailsOperationCompleted, userState);
        }
        
        private void OngetProgramDetailsOperationCompleted(object arg) {
            if ((this.getProgramDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramDetailsCompleted(this, new getProgramDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getPrograms", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getPrograms(int adPlatformId, string programLanguage, string partnershipStatus, string query, object orderBy, string limit, string offset) {
            object[] results = this.Invoke("getPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        query,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getProgramsAsync(int adPlatformId, string programLanguage, string partnershipStatus, string query, object orderBy, string limit, string offset) {
            this.getProgramsAsync(adPlatformId, programLanguage, partnershipStatus, query, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getProgramsAsync(int adPlatformId, string programLanguage, string partnershipStatus, string query, object orderBy, string limit, string offset, object userState) {
            if ((this.getProgramsOperationCompleted == null)) {
                this.getProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramsOperationCompleted);
            }
            this.InvokeAsync("getPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        query,
                        orderBy,
                        limit,
                        offset}, this.getProgramsOperationCompleted, userState);
        }
        
        private void OngetProgramsOperationCompleted(object arg) {
            if ((this.getProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramsCompleted(this, new getProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getProgramsByCategory", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getProgramsByCategory(int categoryId, int adPlatformId, object orderBy) {
            object[] results = this.Invoke("getProgramsByCategory", new object[] {
                        categoryId,
                        adPlatformId,
                        orderBy});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getProgramsByCategoryAsync(int categoryId, int adPlatformId, object orderBy) {
            this.getProgramsByCategoryAsync(categoryId, adPlatformId, orderBy, null);
        }
        
        /// <remarks/>
        public void getProgramsByCategoryAsync(int categoryId, int adPlatformId, object orderBy, object userState) {
            if ((this.getProgramsByCategoryOperationCompleted == null)) {
                this.getProgramsByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProgramsByCategoryOperationCompleted);
            }
            this.InvokeAsync("getProgramsByCategory", new object[] {
                        categoryId,
                        adPlatformId,
                        orderBy}, this.getProgramsByCategoryOperationCompleted, userState);
        }
        
        private void OngetProgramsByCategoryOperationCompleted(object arg) {
            if ((this.getProgramsByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProgramsByCategoryCompleted(this, new getProgramsByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsByAdMedia", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsByAdMedia(string startDate, string endDate, int adMediaId, string currency, bool groupByMonth, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsByAdMedia", new object[] {
                        startDate,
                        endDate,
                        adMediaId,
                        currency,
                        groupByMonth,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getStatisticsByAdMediaAsync(string startDate, string endDate, int adMediaId, string currency, bool groupByMonth, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupBySubId, object orderBy, int limit, int offset) {
            this.getStatisticsByAdMediaAsync(startDate, endDate, adMediaId, currency, groupByMonth, groupByProgram, groupByAdPlatform, groupByEventStatus, groupBySubId, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getStatisticsByAdMediaAsync(string startDate, string endDate, int adMediaId, string currency, bool groupByMonth, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupBySubId, object orderBy, int limit, int offset, object userState) {
            if ((this.getStatisticsByAdMediaOperationCompleted == null)) {
                this.getStatisticsByAdMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatisticsByAdMediaOperationCompleted);
            }
            this.InvokeAsync("getStatisticsByAdMedia", new object[] {
                        startDate,
                        endDate,
                        adMediaId,
                        currency,
                        groupByMonth,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, this.getStatisticsByAdMediaOperationCompleted, userState);
        }
        
        private void OngetStatisticsByAdMediaOperationCompleted(object arg) {
            if ((this.getStatisticsByAdMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatisticsByAdMediaCompleted(this, new getStatisticsByAdMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsByAdPlatform", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsByAdPlatform(string startDate, string endDate, int adPlatformId, string currency, bool groupByMonth, bool groupByProgram, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsByAdPlatform", new object[] {
                        startDate,
                        endDate,
                        adPlatformId,
                        currency,
                        groupByMonth,
                        groupByProgram,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getStatisticsByAdPlatformAsync(string startDate, string endDate, int adPlatformId, string currency, bool groupByMonth, bool groupByProgram, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            this.getStatisticsByAdPlatformAsync(startDate, endDate, adPlatformId, currency, groupByMonth, groupByProgram, groupByEventStatus, groupByAdMedia, groupBySubId, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getStatisticsByAdPlatformAsync(string startDate, string endDate, int adPlatformId, string currency, bool groupByMonth, bool groupByProgram, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset, object userState) {
            if ((this.getStatisticsByAdPlatformOperationCompleted == null)) {
                this.getStatisticsByAdPlatformOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatisticsByAdPlatformOperationCompleted);
            }
            this.InvokeAsync("getStatisticsByAdPlatform", new object[] {
                        startDate,
                        endDate,
                        adPlatformId,
                        currency,
                        groupByMonth,
                        groupByProgram,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, this.getStatisticsByAdPlatformOperationCompleted, userState);
        }
        
        private void OngetStatisticsByAdPlatformOperationCompleted(object arg) {
            if ((this.getStatisticsByAdPlatformCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatisticsByAdPlatformCompleted(this, new getStatisticsByAdPlatformCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsByProgram", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsByProgram(string startDate, string endDate, int programId, string currency, bool groupByMonth, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsByProgram", new object[] {
                        startDate,
                        endDate,
                        programId,
                        currency,
                        groupByMonth,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getStatisticsByProgramAsync(string startDate, string endDate, int programId, string currency, bool groupByMonth, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            this.getStatisticsByProgramAsync(startDate, endDate, programId, currency, groupByMonth, groupByAdPlatform, groupByEventStatus, groupByAdMedia, groupBySubId, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getStatisticsByProgramAsync(string startDate, string endDate, int programId, string currency, bool groupByMonth, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset, object userState) {
            if ((this.getStatisticsByProgramOperationCompleted == null)) {
                this.getStatisticsByProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatisticsByProgramOperationCompleted);
            }
            this.InvokeAsync("getStatisticsByProgram", new object[] {
                        startDate,
                        endDate,
                        programId,
                        currency,
                        groupByMonth,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, this.getStatisticsByProgramOperationCompleted, userState);
        }
        
        private void OngetStatisticsByProgramOperationCompleted(object arg) {
            if ((this.getStatisticsByProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatisticsByProgramCompleted(this, new getStatisticsByProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsDaily", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsDaily(string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsDaily", new object[] {
                        currency,
                        adPlatformId,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getStatisticsDailyAsync(string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            this.getStatisticsDailyAsync(currency, adPlatformId, groupByProgram, groupByAdPlatform, groupByEventStatus, groupByAdMedia, groupBySubId, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getStatisticsDailyAsync(string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset, object userState) {
            if ((this.getStatisticsDailyOperationCompleted == null)) {
                this.getStatisticsDailyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatisticsDailyOperationCompleted);
            }
            this.InvokeAsync("getStatisticsDaily", new object[] {
                        currency,
                        adPlatformId,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, this.getStatisticsDailyOperationCompleted, userState);
        }
        
        private void OngetStatisticsDailyOperationCompleted(object arg) {
            if ((this.getStatisticsDailyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatisticsDailyCompleted(this, new getStatisticsDailyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsMonthly", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsMonthly([System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime startMonth, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime endMonth, string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsMonthly", new object[] {
                        startMonth,
                        endMonth,
                        currency,
                        adPlatformId,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getStatisticsMonthlyAsync(System.DateTime startMonth, System.DateTime endMonth, string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            this.getStatisticsMonthlyAsync(startMonth, endMonth, currency, adPlatformId, groupByProgram, groupByAdPlatform, groupByEventStatus, groupByAdMedia, groupBySubId, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getStatisticsMonthlyAsync(System.DateTime startMonth, System.DateTime endMonth, string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset, object userState) {
            if ((this.getStatisticsMonthlyOperationCompleted == null)) {
                this.getStatisticsMonthlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatisticsMonthlyOperationCompleted);
            }
            this.InvokeAsync("getStatisticsMonthly", new object[] {
                        startMonth,
                        endMonth,
                        currency,
                        adPlatformId,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, this.getStatisticsMonthlyOperationCompleted, userState);
        }
        
        private void OngetStatisticsMonthlyOperationCompleted(object arg) {
            if ((this.getStatisticsMonthlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatisticsMonthlyCompleted(this, new getStatisticsMonthlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getVoucherCodes", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getVoucherCodes(object adPlatformIds, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string programId, string query, bool hasPartnership, string voucherCode, string voucherType, string validFrom, string validTo, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getVoucherCodes", new object[] {
                        adPlatformIds,
                        programId,
                        query,
                        hasPartnership,
                        voucherCode,
                        voucherType,
                        validFrom,
                        validTo,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void getVoucherCodesAsync(object adPlatformIds, string programId, string query, bool hasPartnership, string voucherCode, string voucherType, string validFrom, string validTo, object orderBy, int limit, int offset) {
            this.getVoucherCodesAsync(adPlatformIds, programId, query, hasPartnership, voucherCode, voucherType, validFrom, validTo, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void getVoucherCodesAsync(object adPlatformIds, string programId, string query, bool hasPartnership, string voucherCode, string voucherType, string validFrom, string validTo, object orderBy, int limit, int offset, object userState) {
            if ((this.getVoucherCodesOperationCompleted == null)) {
                this.getVoucherCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVoucherCodesOperationCompleted);
            }
            this.InvokeAsync("getVoucherCodes", new object[] {
                        adPlatformIds,
                        programId,
                        query,
                        hasPartnership,
                        voucherCode,
                        voucherType,
                        validFrom,
                        validTo,
                        orderBy,
                        limit,
                        offset}, this.getVoucherCodesOperationCompleted, userState);
        }
        
        private void OngetVoucherCodesOperationCompleted(object arg) {
            if ((this.getVoucherCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVoucherCodesCompleted(this, new getVoucherCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/searchCommonAds", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap searchCommonAds(object adPlatformIds, bool hasPartnership, int programId, string adType, int adWidth, int adHeight, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("searchCommonAds", new object[] {
                        adPlatformIds,
                        hasPartnership,
                        programId,
                        adType,
                        adWidth,
                        adHeight,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void searchCommonAdsAsync(object adPlatformIds, bool hasPartnership, int programId, string adType, int adWidth, int adHeight, object orderBy, int limit, int offset) {
            this.searchCommonAdsAsync(adPlatformIds, hasPartnership, programId, adType, adWidth, adHeight, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void searchCommonAdsAsync(object adPlatformIds, bool hasPartnership, int programId, string adType, int adWidth, int adHeight, object orderBy, int limit, int offset, object userState) {
            if ((this.searchCommonAdsOperationCompleted == null)) {
                this.searchCommonAdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCommonAdsOperationCompleted);
            }
            this.InvokeAsync("searchCommonAds", new object[] {
                        adPlatformIds,
                        hasPartnership,
                        programId,
                        adType,
                        adWidth,
                        adHeight,
                        orderBy,
                        limit,
                        offset}, this.searchCommonAdsOperationCompleted, userState);
        }
        
        private void OnsearchCommonAdsOperationCompleted(object arg) {
            if ((this.searchCommonAdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCommonAdsCompleted(this, new searchCommonAdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/searchPrograms", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap searchPrograms(int adPlatformId, string programLanguage, string partnershipStatus, string query, bool hasProductFeeds, bool hasVoucherCodes, bool hasMobileAds, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime programStartSince, int categoryId, bool includeSubCategories, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("searchPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        query,
                        hasProductFeeds,
                        hasVoucherCodes,
                        hasMobileAds,
                        programStartSince,
                        categoryId,
                        includeSubCategories,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public void searchProgramsAsync(int adPlatformId, string programLanguage, string partnershipStatus, string query, bool hasProductFeeds, bool hasVoucherCodes, bool hasMobileAds, System.DateTime programStartSince, int categoryId, bool includeSubCategories, object orderBy, int limit, int offset) {
            this.searchProgramsAsync(adPlatformId, programLanguage, partnershipStatus, query, hasProductFeeds, hasVoucherCodes, hasMobileAds, programStartSince, categoryId, includeSubCategories, orderBy, limit, offset, null);
        }
        
        /// <remarks/>
        public void searchProgramsAsync(int adPlatformId, string programLanguage, string partnershipStatus, string query, bool hasProductFeeds, bool hasVoucherCodes, bool hasMobileAds, System.DateTime programStartSince, int categoryId, bool includeSubCategories, object orderBy, int limit, int offset, object userState) {
            if ((this.searchProgramsOperationCompleted == null)) {
                this.searchProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchProgramsOperationCompleted);
            }
            this.InvokeAsync("searchPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        query,
                        hasProductFeeds,
                        hasVoucherCodes,
                        hasMobileAds,
                        programStartSince,
                        categoryId,
                        includeSubCategories,
                        orderBy,
                        limit,
                        offset}, this.searchProgramsOperationCompleted, userState);
        }
        
        private void OnsearchProgramsOperationCompleted(object arg) {
            if ((this.searchProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchProgramsCompleted(this, new searchProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:DefaultNamespace")]
    public partial class HandlerResultSoap {
        
        private HandlerResultSoap_Processor processorField;
        
        private object handlerField;
        
        /// <comentarios/>
        public HandlerResultSoap_Processor processor {
            get {
                return this.processorField;
            }
            set {
                this.processorField = value;
            }
        }
        
        /// <comentarios/>
        public object handler {
            get {
                return this.handlerField;
            }
            set {
                this.handlerField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:DefaultNamespace")]
    public partial class HandlerResultSoap_Processor {
        
        private string codeField;
        
        private string messageField;
        
        private string ridField;
        
        private bool testmodeField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <comentarios/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string rid {
            get {
                return this.ridField;
            }
            set {
                this.ridField = value;
            }
        }
        
        /// <comentarios/>
        public bool testmode {
            get {
                return this.testmodeField;
            }
            set {
                this.testmodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAccountInfoCompletedEventHandler(object sender, getAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void insertEventDataCompletedEventHandler(object sender, insertEventDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertEventDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertEventDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getEventListCompletedEventHandler(object sender, getEventListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getNewProgramsCompletedEventHandler(object sender, getNewProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getProgramCategoriesCompletedEventHandler(object sender, getProgramCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getProgramConditionDetailsCompletedEventHandler(object sender, getProgramConditionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramConditionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramConditionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getProgramDetailsCompletedEventHandler(object sender, getProgramDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getProgramsCompletedEventHandler(object sender, getProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getProgramsByCategoryCompletedEventHandler(object sender, getProgramsByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProgramsByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProgramsByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getStatisticsByAdMediaCompletedEventHandler(object sender, getStatisticsByAdMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatisticsByAdMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatisticsByAdMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getStatisticsByAdPlatformCompletedEventHandler(object sender, getStatisticsByAdPlatformCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatisticsByAdPlatformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatisticsByAdPlatformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getStatisticsByProgramCompletedEventHandler(object sender, getStatisticsByProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatisticsByProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatisticsByProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getStatisticsDailyCompletedEventHandler(object sender, getStatisticsDailyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatisticsDailyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatisticsDailyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getStatisticsMonthlyCompletedEventHandler(object sender, getStatisticsMonthlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatisticsMonthlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatisticsMonthlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getVoucherCodesCompletedEventHandler(object sender, getVoucherCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVoucherCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVoucherCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void searchCommonAdsCompletedEventHandler(object sender, searchCommonAdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCommonAdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCommonAdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void searchProgramsCompletedEventHandler(object sender, searchProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HandlerResultSoap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HandlerResultSoap)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591