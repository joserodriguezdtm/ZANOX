//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18408.
// 
#pragma warning disable 1591

namespace sqlPyO.belboon {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
	using System.Net;
	using System.Text;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BelboonHandlerBinding", Namespace="urn:DefaultNamespace")]
    public partial class BelboonHandler : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private bool useDefaultCredentialsSetExplicitly;
		protected override WebRequest GetWebRequest(Uri uri)
		{
			HttpWebRequest req = (HttpWebRequest)base.GetWebRequest(uri);
			//req.Credentials = new NetworkCredential("webmaster@planesyofertas.com", "Cow3LDhUzkLBckTj46FJ");
			string _auth = string.Format("{0}:{1}", "webmaster@planesyofertas.com", "Cow3LDhUzkLBckTj46FJ");

			string _enc = Convert.ToBase64String(Encoding.ASCII.GetBytes(_auth));
			string _cred = string.Format("{0} {1}", "Basic", _enc);
			req.Headers[HttpRequestHeader.Authorization] = _cred;

			return req;
		}
        /// <remarks/>
        public BelboonHandler() {
            this.Url = "http://api.belboon.com/webservice/soap/belboon/1.0/";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getAccountInfo", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getAccountInfo() {
            object[] results = this.Invoke("getAccountInfo", new object[0]);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAccountInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAccountInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetAccountInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/insertEventData", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap insertEventData(object aData) {
            object[] results = this.Invoke("insertEventData", new object[] {
                        aData});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininsertEventData(object aData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insertEventData", new object[] {
                        aData}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndinsertEventData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getEventList", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getEventList(object adPlatformIds, int programId, string eventType, string eventStatus, string eventCurrency, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime eventDateStart, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime eventDateEnd, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime eventChangeDateStart, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime eventChangeDateEnd, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getEventList", new object[] {
                        adPlatformIds,
                        programId,
                        eventType,
                        eventStatus,
                        eventCurrency,
                        eventDateStart,
                        eventDateEnd,
                        eventChangeDateStart,
                        eventChangeDateEnd,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetEventList(object adPlatformIds, int programId, string eventType, string eventStatus, string eventCurrency, System.DateTime eventDateStart, System.DateTime eventDateEnd, System.DateTime eventChangeDateStart, System.DateTime eventChangeDateEnd, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getEventList", new object[] {
                        adPlatformIds,
                        programId,
                        eventType,
                        eventStatus,
                        eventCurrency,
                        eventDateStart,
                        eventDateEnd,
                        eventChangeDateStart,
                        eventChangeDateEnd,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetEventList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getNewPrograms", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getNewPrograms(int adPlatformId, string programLanguage, string partnershipStatus, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getNewPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetNewPrograms(int adPlatformId, string programLanguage, string partnershipStatus, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getNewPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetNewPrograms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getProgramCategories", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getProgramCategories(string language, int categoryId, string query, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getProgramCategories", new object[] {
                        language,
                        categoryId,
                        query,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProgramCategories(string language, int categoryId, string query, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProgramCategories", new object[] {
                        language,
                        categoryId,
                        query,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetProgramCategories(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getProgramConditionDetails", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getProgramConditionDetails(int programId, int adPlatformId) {
            object[] results = this.Invoke("getProgramConditionDetails", new object[] {
                        programId,
                        adPlatformId});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProgramConditionDetails(int programId, int adPlatformId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProgramConditionDetails", new object[] {
                        programId,
                        adPlatformId}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetProgramConditionDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getProgramDetails", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getProgramDetails(int programId) {
            object[] results = this.Invoke("getProgramDetails", new object[] {
                        programId});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProgramDetails(int programId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProgramDetails", new object[] {
                        programId}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetProgramDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getPrograms", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getPrograms(int adPlatformId, string programLanguage, string partnershipStatus, string query, object orderBy, string limit, string offset) {
            object[] results = this.Invoke("getPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        query,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPrograms(int adPlatformId, string programLanguage, string partnershipStatus, string query, object orderBy, string limit, string offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        query,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetPrograms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getProgramsByCategory", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getProgramsByCategory(int categoryId, int adPlatformId, object orderBy) {
            object[] results = this.Invoke("getProgramsByCategory", new object[] {
                        categoryId,
                        adPlatformId,
                        orderBy});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetProgramsByCategory(int categoryId, int adPlatformId, object orderBy, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getProgramsByCategory", new object[] {
                        categoryId,
                        adPlatformId,
                        orderBy}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetProgramsByCategory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsByAdMedia", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsByAdMedia(string startDate, string endDate, int adMediaId, string currency, bool groupByMonth, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsByAdMedia", new object[] {
                        startDate,
                        endDate,
                        adMediaId,
                        currency,
                        groupByMonth,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStatisticsByAdMedia(string startDate, string endDate, int adMediaId, string currency, bool groupByMonth, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupBySubId, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStatisticsByAdMedia", new object[] {
                        startDate,
                        endDate,
                        adMediaId,
                        currency,
                        groupByMonth,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetStatisticsByAdMedia(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsByAdPlatform", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsByAdPlatform(string startDate, string endDate, int adPlatformId, string currency, bool groupByMonth, bool groupByProgram, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsByAdPlatform", new object[] {
                        startDate,
                        endDate,
                        adPlatformId,
                        currency,
                        groupByMonth,
                        groupByProgram,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStatisticsByAdPlatform(string startDate, string endDate, int adPlatformId, string currency, bool groupByMonth, bool groupByProgram, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStatisticsByAdPlatform", new object[] {
                        startDate,
                        endDate,
                        adPlatformId,
                        currency,
                        groupByMonth,
                        groupByProgram,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetStatisticsByAdPlatform(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsByProgram", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsByProgram(string startDate, string endDate, int programId, string currency, bool groupByMonth, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsByProgram", new object[] {
                        startDate,
                        endDate,
                        programId,
                        currency,
                        groupByMonth,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStatisticsByProgram(string startDate, string endDate, int programId, string currency, bool groupByMonth, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStatisticsByProgram", new object[] {
                        startDate,
                        endDate,
                        programId,
                        currency,
                        groupByMonth,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetStatisticsByProgram(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsDaily", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsDaily(string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsDaily", new object[] {
                        currency,
                        adPlatformId,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStatisticsDaily(string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStatisticsDaily", new object[] {
                        currency,
                        adPlatformId,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetStatisticsDaily(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getStatisticsMonthly", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getStatisticsMonthly([System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime startMonth, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime endMonth, string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getStatisticsMonthly", new object[] {
                        startMonth,
                        endMonth,
                        currency,
                        adPlatformId,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStatisticsMonthly(System.DateTime startMonth, System.DateTime endMonth, string currency, int adPlatformId, bool groupByProgram, bool groupByAdPlatform, bool groupByEventStatus, bool groupByAdMedia, bool groupBySubId, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStatisticsMonthly", new object[] {
                        startMonth,
                        endMonth,
                        currency,
                        adPlatformId,
                        groupByProgram,
                        groupByAdPlatform,
                        groupByEventStatus,
                        groupByAdMedia,
                        groupBySubId,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetStatisticsMonthly(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/getVoucherCodes", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap getVoucherCodes(object adPlatformIds, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string programId, string query, bool hasPartnership, string voucherCode, string voucherType, string validFrom, string validTo, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("getVoucherCodes", new object[] {
                        adPlatformIds,
                        programId,
                        query,
                        hasPartnership,
                        voucherCode,
                        voucherType,
                        validFrom,
                        validTo,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetVoucherCodes(object adPlatformIds, string programId, string query, bool hasPartnership, string voucherCode, string voucherType, string validFrom, string validTo, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getVoucherCodes", new object[] {
                        adPlatformIds,
                        programId,
                        query,
                        hasPartnership,
                        voucherCode,
                        voucherType,
                        validFrom,
                        validTo,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndgetVoucherCodes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/searchCommonAds", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap searchCommonAds(object adPlatformIds, bool hasPartnership, int programId, string adType, int adWidth, int adHeight, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("searchCommonAds", new object[] {
                        adPlatformIds,
                        hasPartnership,
                        programId,
                        adType,
                        adWidth,
                        adHeight,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsearchCommonAds(object adPlatformIds, bool hasPartnership, int programId, string adType, int adWidth, int adHeight, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("searchCommonAds", new object[] {
                        adPlatformIds,
                        hasPartnership,
                        programId,
                        adType,
                        adWidth,
                        adHeight,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndsearchCommonAds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://api.belboon.com/webservice/soap/belboon/1.0/searchPrograms", RequestNamespace="", ResponseNamespace="")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public HandlerResultSoap searchPrograms(int adPlatformId, string programLanguage, string partnershipStatus, string query, bool hasProductFeeds, bool hasVoucherCodes, bool hasMobileAds, [System.Xml.Serialization.SoapElementAttribute(DataType="date")] System.DateTime programStartSince, int categoryId, bool includeSubCategories, object orderBy, int limit, int offset) {
            object[] results = this.Invoke("searchPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        query,
                        hasProductFeeds,
                        hasVoucherCodes,
                        hasMobileAds,
                        programStartSince,
                        categoryId,
                        includeSubCategories,
                        orderBy,
                        limit,
                        offset});
            return ((HandlerResultSoap)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsearchPrograms(int adPlatformId, string programLanguage, string partnershipStatus, string query, bool hasProductFeeds, bool hasVoucherCodes, bool hasMobileAds, System.DateTime programStartSince, int categoryId, bool includeSubCategories, object orderBy, int limit, int offset, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("searchPrograms", new object[] {
                        adPlatformId,
                        programLanguage,
                        partnershipStatus,
                        query,
                        hasProductFeeds,
                        hasVoucherCodes,
                        hasMobileAds,
                        programStartSince,
                        categoryId,
                        includeSubCategories,
                        orderBy,
                        limit,
                        offset}, callback, asyncState);
        }
        
        /// <remarks/>
        public HandlerResultSoap EndsearchPrograms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HandlerResultSoap)(results[0]));
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:DefaultNamespace")]
    public partial class HandlerResultSoap {
        
        private HandlerResultSoap_Processor processorField;
        
        private object handlerField;
        
        /// <comentarios/>
        public HandlerResultSoap_Processor processor {
            get {
                return this.processorField;
            }
            set {
                this.processorField = value;
            }
        }
        
        /// <comentarios/>
        public object handler {
            get {
                return this.handlerField;
            }
            set {
                this.handlerField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:DefaultNamespace")]
    public partial class HandlerResultSoap_Processor {
        
        private string codeField;
        
        private string messageField;
        
        private string ridField;
        
        private bool testmodeField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <comentarios/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string rid {
            get {
                return this.ridField;
            }
            set {
                this.ridField = value;
            }
        }
        
        /// <comentarios/>
        public bool testmode {
            get {
                return this.testmodeField;
            }
            set {
                this.testmodeField = value;
            }
        }
    }
}

#pragma warning restore 1591